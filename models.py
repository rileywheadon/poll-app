from app import db
from typing import List
from datetime import datetime, timezone
import sqlalchemy as sa
import sqlalchemy.orm as so

# NOTE:Tables are automatically generated by FLASK-SQLAlchemy


class User(db.Model):
    id: so.Mapped[int] = so.mapped_column(primary_key=True)
    username: so.Mapped[str] = so.mapped_column(unique=True)
    email: so.Mapped[str]
    user_responses: so.Mapped[List["Response"]] = so.relationship("Response", backref="user")


class Poll(db.Model):
    id: so.Mapped[int] = so.mapped_column(primary_key=True)
    question: so.Mapped[str]
    poll_responses: so.Mapped[List["Response"]] = so.relationship("Response", backref="poll")
    answers: so.Mapped[List["PollAnswer"]] = so.relationship("PollAnswer", backref="poll")


class PollAnswer(db.Model):
    id: so.Mapped[int] = so.mapped_column(primary_key=True)
    answer: so.Mapped[str]
    poll_id: so.Mapped[int] = so.mapped_column(sa.ForeignKey("poll.id"))
    answer_responses: so.Mapped[List["Response"]] = so.relationship("Response", backref="answer")


class Response(db.Model):
    id: so.Mapped[int] = so.mapped_column(primary_key=True)
    timestamp: so.Mapped[datetime] = so.mapped_column(index=True, default=lambda: datetime.now(timezone.utc))
    user_id : so.Mapped[int] = so.mapped_column(sa.ForeignKey("user.id"))
    poll_id : so.Mapped[int] = so.mapped_column(sa.ForeignKey("poll.id"))
    answer_id : so.Mapped[int] = so.mapped_column(sa.ForeignKey("poll_answer.id")) 

